source go.vim

snippet     helloworld
abbr        package main\nimport fmt...
options     head
  package main

  import (
    "fmt"
  )

  func main() {
    fmt.Printf("Hello, world\n")
  }

snippet     func
abbr        func ...() { ... }
alias fn
options     head
  func ${1}(${2}) ${3}{
    ${0:TARGET}
  }

snippet     import
alias im
options     head
  import (
    "fmt"
    ${1}
  )
  ${0:TARGET}

snippet     package
alias pk
options     head
  package ${1}
  ${0:TARGET}

snippet     printf
alias pf
options     head
  fmt.Printf("${1}\n"${2})

snippet     println
alias pl
options     head
  fmt.Println(${0:TARGET})

snippet     struct
alias ts
options     head
  type ${1} struct {
    ${0:TARGET}
  }

snippet     interface
alias ti
options     head
  type ${1} interface {
    ${0:TARGET}
  }

snippet     for
options     head
  for ${1} {
    ${0:TARGET}
  }

snippet     range
abbr        for range
options     head
  for ${1} := range ${2} {
    ${0:TARGET}
  }

snippet     if
options     head
    if ${1} {
      ${0:TARGET}
    }

snippet     switch
abbr        switch {}
options     head
  switch ${1} {
  case ${2}:
    ${0:TARGET}
  }

snippet     select
abbr        select {}
options     head
  select {
  case ${1}:
    ${0:TARGET}
  }

snippet     case
options     head
  case ${1}:
    ${2:TARGET}
